<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
	<mapper namespace="cafe24.wio.mapper.ApprMapper">
	
	
	<select id="dateCheck" parameterType="string" resultType = "int">
	
		select COUNT(*) 
		FROM wt_attendance_management AS m
		WHERE 
			DATE_FORMAT(NOW(),'%Y-%m-%d') = m.attendance_date AND m.mr_id = #{SID};
		
	</select>

	
	
	
	
	<update id = "goingStOut" parameterType="string">
		UPDATE wt_attendance_management
		SET
			going_out_stTime=NOW()
		WHERE 
			attendance_code = #{attCode};
	</update>
	
	
	
	<select id="getAttCode" parameterType="string" resultType = "string">
	
		SELECT attendance_code
		FROM wt_attendance_management AS a
		WHERE attendance_date = LEFT(NOW(),10) AND a.mr_id = #{SID}
		
	</select>
	
	
	
	
	<!-- 출근 insert -->
	<insert id="addAttendance" parameterType="AttManagement">
	
		INSERT INTO wt_attendance_management
					(attendance_code, mr_id, attendance_date, attendance_start_time, attendance_end_time, attendance_time, attendance_note, going_out_time, going_out_stTime, going_out_endTime)
			VALUES (#{attCode}, #{mrId}, LEFT(NOW(),10), right(NOW(),8), null, 0, '', 0, null, null)
		
	</insert>



	<select id = "getAttMaxCode" resultType="hashMap">
		SELECT IFNULL((SELECT max(CAST(substring(attendance_code,12) AS DECIMAL))+1 FROM wt_attendance_management),1) AS max;
	</select>	
	
	<select id = "getGoingOutTime" parameterType="string" resultType="int">
	
		SELECT (TIMESTAMPDIFF(minute, going_out_stTime, going_out_endTime)/60) AS goingOutTime
		FROM wt_attendance_management
		WHERE attendance_code= #{attCode}
	
	</select>

	
	<select id = "getAttendanceList" parameterType="string" resultType="AttManagement">
	
		SELECT attendance_code as attCode
				, mr_id as mrId 
				, attendance_date as attDate
				, attendance_start_time as attStTime
				, attendance_end_time as attEndTime
				, attendance_time as attTime
				, attendance_note as attNote
				, going_out_time as goingOut
				, going_out_stTime as goingOutStTime
				, going_out_endTime as goingOutEndTime
		FROM wt_attendance_management AS a
		WHERE a.mr_id = #{SID};
	
	</select>
	
	
	
	
	<select id = "getMemberPhone" parameterType="string" resultType="string">
	
	SELECT m.mr_phone
	FROM wt_member_registration AS m
	WHERE m.mr_id = #{oid001};

	
	
	
	</select>
	
	
	
	
	
	
	<!-- 현재날짜 구하기 -->
	<select id = "getNow" resultType = "string">
		SELECT NOW();
	</select>
	
	
	<!-- 휴가 상세보기 -->
	<select id="getHolidayDetail" parameterType="string" resultType="ApprovalRequest">
		SELECT 	request_code as reCode
				, request_date as reDate
				, r.mr_name as mrName
				, left(request_start_date,10) as reStartDate
				, left(request_end_date,10) as reEndDate
				, request_reason as reReason
				, sortation as sortation
				, request_supervisor as reSupervisor 
				, request_processing_date as reProcessingDate
				, request_state as reState
				, refuse_reason as refuseReason
		FROM wt_approval_request AS a 
			LEFT JOIN wt_member_registration AS r
			ON a.mr_id = r.mr_id
		WHERE request_code = #{reCode};

	</select>


	<!-- 휴가 리스트 삭제 -->
	<delete id = "reDelete" parameterType="string">
		DELETE 
		FROM wt_approval_request 
		WHERE request_code= #{reCode};
	
	</delete>


	<!-- 휴가 승인 -->
	<update id="approval" parameterType="ApprovalRequest">
		UPDATE wt_approval_request
		SET
			request_state = #{reState},
			request_supervisor = #{reSupervisor},
			request_processing_date=NOW(),
			refuse_reason = #{refuseReason}
		WHERE 
			request_code = #{reCode};
		
	</update>
	
	
	<!-- 업데이트 예제 -->
	<update id="modifyMember" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" suffixOverrides=",">

			<!-- neq는 !=랑 같은 말 -->
			<if test="memberPw != null and memberPw neq''.toString()">
				m_pw = #{memberPw},
			</if>
			<if test="memberName != null and memberName neq''.toString()">
				m_name = #{memberName},
			</if>
			<if test="memberLevel != null and memberLevel neq''.toString()">
				m_level = #{memberLevel},
			</if>
			<if test="memberEmail != null and memberEmail neq''.toString()">
				m_email = #{memberEmail},
			</if>
			<if test="memberAddr != null and memberAddr neq''.toString()">
				m_addr = #{memberAddr}
			</if>
		</trim>
		WHERE
		m_id = #{memberId};



	</update>

	
	<!-- 휴가리스트 중복 구하기 -->
	<select id="hListDuplicate" parameterType="String" resultType="int">
	
		select COUNT(*) 
		from wt_approval_request
		WHERE 
			((DATE_FORMAT(#{startDate},'%Y-%m-%d') <![CDATA[ <= ]]> request_start_date and request_start_date <![CDATA[ <= ]]> DATE_FORMAT(#{endDate},'%Y-%m-%d')) or (DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ <= ]]> request_end_date and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ >= ]]> request_start_date) or (DATE_FORMAT(#{startDate},'%Y-%m-%d') <![CDATA[ >= ]]> request_start_date and DATE_FORMAT(#{endDate},'%Y-%m-%d') <![CDATA[ <= ]]> request_end_date))
			AND request_state = '승인';

	</select>
	
	
	
	<!-- db에서 입력받은 reStartDate(휴가시작날짜)가 현재 시간보다 같거나 작은지 검색한다 -->
	<select id="getStartDayCk" parameterType="String"
		resultType="int">
		
		SELECT #{reStartDate} <![CDATA[ <= ]]> NOW()
		
		
	</select>
	
	
	<!-- 코드 자동 생성 증가 -->
	<select id="getReCode" resultType="hashMap">
		SELECT IFNULL((SELECT max(CAST(substring(request_code,9) AS DECIMAL))+1 FROM wt_approval_request),1) AS max;
	
	
	</select>

	
	<!-- 휴가 insert -->
	<insert id="addholidayApproval" parameterType="ApprovalRequest">
	
		INSERT INTO wt_approval_request
		(request_code, request_sortation, mr_id, request_date, request_start_date, request_end_date, request_outting_time, request_reason, sortation, request_supervisor, request_processing_date, request_state)
		VALUES (#{reCode},'holiday', #{mrId}, NOW(), #{reStartDate}, #{reEndDate}, null,  #{reReason}, #{sortation},null, null, '신청')
		
	</insert>
	
	
	<!-- 멤버 아이디, 멤버 패스워드, 멤버이름을 검색후 멤버객체 반환 -->
	<select id="getMemberById" parameterType="String" resultType="Member">
		SELECT mr_id as mrId
				, mr_pw as mrPw
				, mr_name as mrName
		FROM wt_member_registration
		WHERE 
			mr_id = #{mrId};
	</select>


	<!-- 휴가신청리스트 검색 -->
	<select id="getHolidayList" resultType="ApprovalRequest">
		
		SELECT 	request_code as reCode
				, request_date as reDate
				, r.mr_name as mrId
				, left(request_start_date,10) as reStartDate
				, left(request_end_date,10) as reEndDate
				, request_reason as reReason
				, sortation as sortation
				, request_supervisor as reSupervisor 
				, request_processing_date as reProcessingDate
				, request_state as reState
				, refuse_reason as refuseReason
		FROM wt_approval_request AS a 
			LEFT JOIN wt_member_registration AS r
			ON a.mr_id = r.mr_id
		WHERE request_sortation = 'holiday';

	</select>

</mapper>
    