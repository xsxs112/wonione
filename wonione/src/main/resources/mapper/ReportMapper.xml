<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="cafe24.wio.mapper.ReportMapper">

<resultMap type="Report" id="reportResultMap">
		<result column="lec_open_code" 		property="lecOpenCode"/>
		<result column="lec_open_sche_code" property="lecOpenScheCode"/>
		<result column="mr_id" 				property="mrId"/>
		<result column="lec_target" 		property="lecTarget"/>
		<result column="lec_plan" 			property="lecPlan"/>
		<result column="lec_etc" 			property="lecEtc"/>
		<result column="open_lec_reg_date"  property="openLecRegDate"/>
		<result column="mr_name"  			property="mrName"/>
		<result column="lec_name"  			property="lecName"/>
		
</resultMap>

<!--보고서리스트  -->
<select id="getReportList" resultType="Report"  resultMap="reportResultMap">
	
	SELECT 
		  lec_open_code
		, lec_open_sche_code
		, mr_name
		, lec_target
		, lec_plan
		, lec_etc
		, open_lec_reg_date
	FROM 
		wt_open_lecture 
	INNER JOIN
		wt_member_registration 
	ON
		wt_member_registration.mr_id = wt_open_lecture.mr_id;

</select>

<!--보고서 상세보기  -->
<select id="getReportDetailList" parameterType="String" resultType="Report"  resultMap="reportResultMap">
	
	SELECT 
		  lec_open_code
		, lec_open_sche_code
		, mr_name
		, lec_target
		, lec_plan
		, lec_etc
		, open_lec_reg_date
	FROM 
		wt_open_lecture 
	INNER JOIN
		wt_member_registration 
	ON
		wt_member_registration.mr_id = wt_open_lecture.mr_id
	WHERE
		lec_open_code = #{lecOpenCode};

</select>

<select id="getReCode" resultType="hashMap">
      SELECT (max(CAST(substring(lec_open_code,12) AS DECIMAL))+1)as max FROM wt_open_lecture
</select>

<!--보고서작성쿼리문  -->
<insert id="getReportWrite" parameterType="Report">
   
   INSERT INTO wt_open_lecture
         ( lec_open_code
         , lec_open_sche_code
         , mr_id
         , lec_target
         , lec_plan
         , lec_etc
         , open_lec_reg_date)
   VALUES(
          #{lecOpenCode}
         , #{lecName}
         , #{mrName}
         , #{lecTarget}
         , #{lecPlan}
         , #{lecEtc}
         , NOW());

</insert>

<!-- 수업명가져오기   -->

<select id="classCode" resultType="hashMap"  parameterType="String">

	SELECT
		os.lec_name,
		os.lec_os_code
	FROM
		wt_lecture_open_schedule AS os
		INNER join
		wt_lecture_open AS od
		on
		od.lec_os_code = os.lec_os_code;	

</select>

<!-- 작성자이름가져오기  -->
<select id="writeName" resultType="hashMap"  parameterType="String">

	SELECT
			wt_member_registration.mr_name,
			wt_member_registration.mr_id
			
	FROM
			wt_member_registration
			INNER join
			wt_open_lecture
			on
			wt_member_registration.mr_id = wt_open_lecture.mr_id;

</select>

<!-- 삭제처리  -->
<delete id="deleteCode" parameterType="String">
	DELETE 
	FROM 
		wt_open_lecture
	WHERE 
		lec_open_code= #{lecOpenCode};
</delete>

<!--보고서수정쿼리  -->
<update id="updateCode" parameterType="Report">
	UPDATE 
		wt_open_lecture
	SET 
		  lec_target= #{lecTarget}
		, lec_plan= #{lecPlan}
		, lec_etc= #{lecEtc}
		, open_lec_reg_date= NOW()
	WHERE 
		lec_open_code= #{lecOpenCode};

</update>

<!-- 검색조건  -->

<select id="getSearchList" resultType="Report"  resultMap="reportResultMap">
	
	SELECT 
		  lec_open_code
		, lec_open_sche_code
		, mr_name
		, lec_target
		, lec_plan
		, lec_etc
		, open_lec_reg_date
	FROM 
		wt_open_lecture
		INNER JOIN
		wt_member_registration 
	ON
		wt_member_registration.mr_id = wt_open_lecture.mr_id
	WHERE
		${lecSk} LIKE CONCAT('%',#{lecSv},'%');	

</select>


</mapper>
    
