<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
 <mapper namespace="cafe24.wio.mapper.GradeReportMapper">

<resultMap type="GradeReport" id="gradeReportResultMap">
		<result column="report_lec_code" 		property="reportLecCode"/>
		<result column="open_lec_code" 			property="openLecCode"/>
		<result column="grade_test_num" 		property="gradeTestNum"/>
		<result column="mr_id" 					property="mrId"/>
		<result column="work_report" 			property="workReport"/>
		<result column="grade_Average" 			property="gradeAverage"/>
		<result column="achievement_rate" 		property="achievementRate"/>	
		<result column="fin_lec_reg_date" 		property="finLecRegDate"/>	
		<result column="test_number" 			property="testNumber"/>	
		<result column="mr_name" 				property="mrName"/>
		<result column="lec_target" 			property="lecTarget"/>
		<result column="cla_people" 			property="claPeople"/>
		<result column="lec_os_code" 			property="lecOsCode"/>
		<result column="test_round" 			property="testRound"/>
		<result column="lec_open_code" 			property="lecOpenCode"/>
</resultMap>

<!-- 성적업무보고서 조회 -->
<select id="getGradeReportList" resultType="GradeReport" resultMap="gradeReportResultMap">
	SELECT 
		report_lec_code
		, open_lec_code
		, test_number
		, mr_name
		, work_report
		, grade_Average
		, achievement_rate
		, fin_lec_reg_date
	FROM 
		wt_report_lecture
	inner join
		wt_grade_num
	on
		wt_report_lecture.grade_test_num = wt_grade_num.grade_test_num
	LEFT join
		wt_member_registration
	on
		wt_member_registration.mr_id = wt_report_lecture.mr_id
	ORDER by
		wt_report_lecture.report_lec_code DESC;	
</select>

<!-- 성적업무보고서 상세조회 -->
<select id="GradeReportDetailList" resultType="GradeReport" resultMap="gradeReportResultMap" parameterType="String">
	SELECT 
		  report_lec_code
		, open_lec_code
		, test_number
		, mr_name
		, work_report
		, grade_Average
		, achievement_rate
		, fin_lec_reg_date
	FROM 
		wt_report_lecture
		inner join
		wt_grade_num
		on
		wt_report_lecture.grade_test_num = wt_grade_num.grade_test_num
		LEFT join
		wt_member_registration
		on
		wt_member_registration.mr_id = wt_report_lecture.mr_id
	where
		report_lec_code = #{reportLecCode};

</select>

<!-- 조건검색  -->
<select id="searchGradeReport" resultType="GradeReport" resultMap="gradeReportResultMap">
	SELECT 
		  report_lec_code
		, open_lec_code
		, test_number
		, mr_name
		, work_report
		, grade_Average
		, achievement_rate
		, fin_lec_reg_date
	FROM 
		wt_report_lecture
		inner join
		wt_grade_num
		on
		wt_report_lecture.grade_test_num = wt_grade_num.grade_test_num
		LEFT join
		wt_member_registration
		on
		wt_member_registration.mr_id = wt_report_lecture.mr_id
	where
		${graRe} LIKE CONCAT('%',#{graResult},'%');

</select>

<!-- 회차가져오기  -->
<select id="testNum" resultType="hashMap" >

	SELECT 
		 grade_test_num
		,test_number
		,grade_test_reg_date
	FROM 
		wt_grade_num;
		
</select> 

<!--삭제처리  -->
<delete id="gradeReportDelete" parameterType="String">

	DELETE 
	FROM 
		wt_report_lecture
	WHERE 
		report_lec_code=#{reportLecCode};

</delete>

<!-- 자동증가코드  -->
<select id="gradeCode" resultType="hashMap">
	SELECT IFNULL((SELECT max(CAST(SUBSTRING(report_lec_code,11) AS DECIMAL))+1 FROM wt_report_lecture),1) AS max;
</select>

<!--보고서작성 쿼리문  -->
<insert id="GradeReportWrite"  parameterType="GradeReport" >
   
   INSERT INTO
		wt_report_lecture
		(report_lec_code
		, open_lec_code
		, grade_test_num
		, mr_id
		, work_report
		, grade_Average
		, achievement_rate
		, fin_lec_reg_date)
   VALUES
		(
		 #{reportLecCode}
		, #{lecOpenCode}
		, #{testNumber}
		, #{mrName}
		, #{workReport}
		, ${gradeAverage}
		, ${achievementRate}
		, NOW()
		);
 
</insert>

<!-- 강사이름아이디 가져오기-->
<select id="teacherId" resultType="hashMap" >

	SELECT 
		mr_id, 
		mr_name, 
		level_num
	FROM 
		wt_member_registration
	where 
	level_num = "2";

</select>

<!-- 업무계획서코드 가져오기 -->
<select id="lecOpenCodeNum" parameterType="String" resultType="hashMap" >

	SELECT 
 		ol.lec_open_code as 'lecOpenCode'
	FROM
		wt_open_lecture AS ol
	INNER JOIN
		wt_report_lecture AS rl
	ON
		ol.mr_id = rl.mr_id
	WHERE
		ol.lec_open_sche_code = #{lecOsCode} and ol.mr_id = #{sessionId};
	
</select>



<!-- 수업명가져오기   -->

<select id="classCode" resultType="hashMap"  parameterType="String">

	SELECT 
		lec_os_code
		, lec_name
		, mr_teacher_id
		,m.mr_name
   FROM 
  		 wt_lecture_open_schedule AS lo
   INNER JOIN 
   		wt_member_registration AS m
   on
  		 lo.mr_teacher_id = m.mr_id
   where
  		 m.mr_id = #{sessionId};

</select>


<!-- 업무목표점수가져오기  -->
<select id="targetScore" resultType="hashMap" parameterType="String">
	
		SELECT 
		  lec_open_code
		, lec_open_sche_code
		, lec_os_code
		, mr_id
		, lec_target
	FROM 
		wt_open_lecture as m
		inner join
		wt_lecture_open_schedule as los
		on
		m.lec_open_sche_code = los.lec_os_code 
		where
  		 m.mr_id = #{sessionId} and m.lec_open_sche_code = #{lecOsCode} ;
	
</select>

<!-- 페이징 카운트-->
<select id="countGradeReport" resultType="int">
      SELECT
         COUNT(*)
      FROM
        wt_report_lecture;
</select>

<!-- 페이징 -->
<select id="countGradeReportList" resultType="GradeReport"  resultMap="gradeReportResultMap">
	SELECT 
		report_lec_code
		, open_lec_code
		, test_number
		, mr_name
		, work_report
		, grade_Average
		, achievement_rate
		, fin_lec_reg_date
	FROM 
		wt_report_lecture
		inner join
		wt_grade_num
		on
		wt_report_lecture.grade_test_num = wt_grade_num.grade_test_num
		LEFT join
		wt_member_registration
		on
		wt_member_registration.mr_id = wt_report_lecture.mr_id
	LIMIT #{startRow}, #{rowPerPage};

</select>

<select id="openLecture" resultType="GradeReport"  resultMap="gradeReportResultMap">

	SELECT 
		 wt_lecture_open.lec_op_code
		,wt_lecture_open.cla_people
		,wt_lecture_open_schedule.lec_name
	FROM 
		wt_lecture_open
	inner join
		wt_lecture_open_schedule
	on
		wt_lecture_open.lec_os_code = wt_lecture_open_schedule.lec_os_code; 

</select>

<!-- 평균구하기 -->
<select id="gradeAvg" resultType="hashMap" parameterType="String">
	
	SELECT 
  		 (sum(m.grade_man_score))/COUNT(c.app_sid) AS grade_man_score
   	FROM 
   		 wt_course AS c
   	INNER JOIN 
         wt_grade_management as m
  	 on
  		 c.app_sid = m.mr_id
   	WHERE  
 		 c.lec_os_code = #{lecCode} AND m.test_round = #{testNum};
   
</select>

<!--목표점수 초과한 학생 수  -->

<select id="studentTargetCount" resultType="hashMap" parameterType="String">
<![CDATA[
SELECT 
	   COUNT(c.app_sid) as 'targetCount'
	FROM 
	   wt_course AS c
	INNER JOIN 
	   wt_lecture_open_schedule AS lo
	ON
	   c.lec_os_code = lo.lec_os_code
	INNER JOIN 
	   wt_grade_management AS g
	ON 
	   c.app_sid =g.mr_id
	INNER JOIN 
	   wt_open_lecture AS o
	ON 
	   lo.lec_os_code = o.lec_open_sche_code 
	WHERE
	   c.lec_os_code = #{lecOsCode} && g.test_round = #{testRound} && (o.lec_target <= g.grade_man_score);
]]>
</select>

<!-- 반에 따른 학생수 -->
<select id="studentCount" resultType="hashMap" parameterType="String">

		SELECT 
			  cla_people as 'claPeople'
			, lec_os_code
		FROM 
			wt_lecture_open 
		where
			lec_os_code  = #{lecOsCode};

</select>

</mapper>

