<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafe24.wio.mapper.QuestionMapper">
	<resultMap type="Question" id="QuestionMap">
		<result column="qe_code" 		property="qeCode"/>
		<result column="qc_student" 	property="qcStudent"/>
		<result column="qt_teacher" 	property="qtTeacher"/>
		<result column="qt_codeName" 	property="qtCodeName"/>
		<result column="qt_title" 		property="qtTitle"/>
		<result column="mr_o_id" 		property="qeOid"/>
		<result column="qe_data" 		property="qeData"/>
		<result column="qe_score" 		property="qeScore"/>
		<result column="qe_answer" 		property="qeAnswer"/>
		<result column="qe_date" 		property="qeDate"/>
		<result column="qe_A" 			property="qeA"/>
		<result column="qe_B" 			property="qeB"/>
		<result column="qe_C" 			property="qeC"/>
		<result column="qe_D" 			property="qeD"/>
	</resultMap>
	<select id="QuestionTitleNameCheck" resultType="int">
		SELECT 
			COUNT(qt_codename)
		FROM 
			wt_question_taker AS qt
		WHERE
			qt.qt_codename = #{questionCodeName};
	</select>
	<update id="modifyQuestionTitle">
		UPDATE 
			wt_question_taker
		SET
			qt_codename=#{questionCodeName},
			qt_title=#{questionTitle}
		WHERE 
			qt_codename=#{qtCodeSubName};
	</update>
	<delete id="deleteQuestion" parameterType="int">
		DELETE 
		FROM 
			wt_questions_enrollment 
		WHERE 
			qe_code=#{qeCode};
	</delete>
	<update id="modifyQuestion"  parameterType="Consulting">
		UPDATE 
			wt_questions_enrollment
		SET
			qe_data=#{qeData},
			qe_score=#{qeScore},
			qe_answer=#{qeAnswer},
			qe_A=#{qeA},
			qe_B=#{qeB},
			qe_C=#{qeC},
			qe_D=#{qeD}
		WHERE 
			qe_code=#{qeCode};
	</update>
	<select id="titleQuestionListView" resultType="hashMap" parameterType="map">
		SELECT 
			qe_code
			,qt_codename
			,qe_data
			,qe_score
			,qe_answer
			,qe_date
			,qe_A
			,qe_B
			,qe_C
			,qe_D
		FROM 
			wt_questions_enrollment AS qe
		WHERE 
			qe.qe_code=#{qeCode};
	</select>
	<select id="titleQuestionList" resultType="hashMap" parameterType="map">
		SELECT 
		 	 q.rowNum   AS rowNum
			,qe_code
			,qt_title
			,qt_codename
			,qe_data
			,qe_score
			,qe_answer
			,mr_name
    	FROM 
        	(SELECT
            	(@rowNum := @rowNum+1) AS rowNum
            	,qe.qe_code
            	,qt.qt_title
            	,qe.qt_codename
            	,qe.qe_data
            	,qe.qe_score
            	,qe.qe_answer
            	,m.mr_name	
        FROM
				wt_questions_enrollment AS qe
				INNER JOIN 
				wt_question_taker AS qt
				on
				qe.qt_codename = qt.qt_codename
				INNER join
				wt_member_registration AS m
				on
				qt.qt_teacher = m.mr_id
         	JOIN
           	(SELECT @rowNum :=0 ) AS r
      	WHERE
       		qe.qt_codename = #{qtCodeName}   
       		ORDER BY qe.qe_code  ASC) AS q
       		LIMIT #{startRow},#{rowPerPage};
	</select>
	<select id="titleQuestionListCount" resultType="int">
       SELECT
         COUNT(*)
      FROM
         wt_questions_enrollment AS qe
         WHERE
			qe.qt_codename=#{qtCodeName}; 
    </select>
	<delete id="deleteQuestionTitle">
		DELETE
		FROM 
			wt_question_taker 
		WHERE 
			qt_codename=#{questionName};
	</delete>
	<insert id="insertQuestionTitle">
		INSERT INTO 
			wt_question_taker
			(qt_codename
			,qt_title
			,qt_teacher
			,qt_date)
		VALUES 
		(#{qtCodeName}
		,#{qtTitle} 
		,#{qtTeacher}
		,NOW());
	</insert>
	<insert id="insertQuestion">
		INSERT INTO 
			wt_questions_enrollment
			(qe_code
			,qt_codeName
			,qe_data
			,qe_score
			,qe_answer
			,qe_date
			,qe_A
			,qe_B
			,qe_C
			,qe_D)
		VALUES 
			(NULL
			,#{qtCodeName}
			,#{qeData}
			,#{qeScore}
			,#{qeAnswer}
			,NOW()
			,#{qeA}
			,#{qeB}
			,#{qeC}
			,#{qeD});
	</insert>
	<select id="QuestionSidCheck" resultType="String">
		SELECT
			COUNT(1) AS num
		FROM 
			wt_questions_candidate AS qc
			INNER JOIN
			wt_questions_enrollment AS qe
			on
			qc.qe_code = qe.qe_code
		WHERE
			qe.qt_codeName = #{questionName}
		AND
			qc.qc_student = #{questionSid}; 
	</select>
	<select id="ScoreCheck" resultType="hashMap"  parameterType="map">
		<![CDATA[
			SELECT 
			 	m.mr_name
				,sum(qe_score) AS qe_score
				,qc_date
				,(CASE WHEN sum(qe_score) < 60 THEN '초급'
						 WHEN (sum(qe_score) >= 60 AND sum(qe_score) <80) THEN '중급'
						 WHEN (sum(qe_score) >= 80 AND sum(qe_score) <100) THEN '고급'
						 ELSE '판단불가' 
					END) AS 'scoreClass' 
			FROM 
				wt_questions_candidate AS qc
				INNER join
				wt_member_registration AS m
				on
				qc.qc_student = m.mr_id
			WHERE 
				qc.qc_student =#{scoreSid}
			GROUP BY 
				qc.qc_student;
		 ]]>
	</select>
	<insert id="QuestionScoreCheck" parameterType="Question">
		INSERT INTO 
			wt_questions_candidate
				(qc_code
				,qc_student
				,qe_answer
				,qe_code
				,qe_score
				,qc_date)
		VALUES 
			(null
			,#{studentName}
			,#{qeAnswer}
			,#{qeCode}
			,(SELECT
					S.qe_score
				FROM
				(
					SELECT  
						qe_score
						,1 AS ORDERS
						FROM wt_questions_enrollment
						where
						qe_code=#{qeCode} AND qe_answer=#{qeAnswer}
						
					UNION
					
					SELECT 0 AS qe_score, 0 AS ORDERS
				) AS S
				
				ORDER BY S.ORDERS DESC
				LIMIT 0, 1)
				,NOW());
	</insert>
	
	<select id="Question" resultType="hashMap" parameterType="map">
		SELECT 
		 	 qn.rowNum   AS rowNum
		 	,qn.qe_code
		 	,qt_codeName
			,qn.qe_data
			,qn.qe_data
			,qn.qe_score
			,qn.qe_answer
			,qn.qe_date
			,qn.qe_A
			,qn.qe_B
			,qn.qe_C
			,qn.qe_D
		FROM 
        	 (
	        	 SELECT
	           		 (@rowNum := @rowNum+1) AS rowNum,
		        	 q.qe_code
		        	,q.qt_codeName
					,q.qe_data
					,q.qe_date
					,q.qe_score
					,q.qe_answer
					,q.qe_A
					,q.qe_B
					,q.qe_C
					,q.qe_D
				FROM
					wt_questions_enrollment AS q  
	         	INNER JOIN
	           	wt_question_taker AS qt
	         	on
	           	q.qt_codeName = qt.qt_codename
	         	JOIN
	           	(SELECT @rowNum :=0 ) AS r
	       		ORDER BY q.qe_code ASC
	       	) AS qn
		WHERE
			qn.qt_codeName = #{questionName}
    		LIMIT #{startRow},#{rowPerPage};
	</select>
	<select id="QuestionCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			wt_questions_enrollment AS qe
		WHERE
			qe.qt_codename = #{questionName};
    </select>
	<select id="QuestionList" resultType="hashMap" parameterType="map">
		SELECT 
		 	 q.rowNum   AS rowNum
		 	,qt_codename
		 	,qt_title
		 	,qt_teacher
		 	,qt_date
			,mr_name
    	FROM 
        	(SELECT
            	(@rowNum := @rowNum+1) AS rowNum
            	,q.qt_codename
        		,q.qt_title
        		,q.qt_teacher
        		,q.qt_date
        		,m.mr_name
        FROM
			wt_question_taker AS q
         	INNER JOIN
           	wt_member_registration AS m
         	on
           	q.qt_teacher = m.mr_id
         	JOIN
           	(SELECT @rowNum :=0 ) AS r   
       		ORDER BY q.qt_codeName ASC) AS q
       		LIMIT #{startRow},#{rowPerPage};
	</select>
	<select id="QuestionListCount" resultType="int">
      SELECT
         COUNT(*)
      FROM
         wt_question_taker;
    </select>

</mapper>