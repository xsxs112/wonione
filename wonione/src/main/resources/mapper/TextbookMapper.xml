<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="cafe24.wio.mapper.TextbookMapper">

<resultMap type="TextbookBasicInfo" id="resultTxbBasicInfo">
	<!-- <id property="txbCode" column="txb_code"/> -->
	<result column="txb_code" 		property="txbCode"/>
	<result column="txb_name" 		property="txbName"/>
	<result column="txb_publisher" 	property="txbPublisher"/>
	<result column="txb_author" 	property="txbAuthor"/>
	<result column="txb_writer" 	property="txbWriter"/>
	<result column="txb_reg_date" 	property="txbRegDate"/>
	<result column="txb_remark"		property="txbRemark"/>
	<!-- <collection property="whTextbook" javaType="java.util.ArrayList" ofType="WhTextbook" resultMap="resultWhTextbook"/> -->
</resultMap>

<resultMap type="WhTextbook" id="resultWhTextbook">
	<result column="wh_txb_code" 			property="whTxbCode"/>
	<result column="txb_code" 				property="txbCode"/>
	<result column="wh_txb_quantity" 		property="whTxbQuantity"/>
	<result column="wh_txb_date" 			property="whTxbDate"/>
	<result column="stock_txb_quantity"		property="stockTxbQuantity"/>
	<result column="wh_txb_writer" 			property="whTxbWriter"/>
	<result column="wh_txb_reg_date" 		property="whTxbRegDate"/>
	<result column="wh_txb_remark" 			property="whTxbRemark"/>
</resultMap>

<resultMap type="SupplyTextbook" id="resultSupplyTextbook">
	<result column="sup_txb_code" 			property="supTxbCode"/>
	<result column="txb_code" 				property="txbCode"/>
	<result column="sup_txb_quantity" 		property="supTxbQuantity"/>
	<result column="txb_receiver_id" 			property="txbReceiverId"/>
	<result column="sup_txb_date"		property="supTxbDate"/>
	<result column="sup_txb_writer" 			property="supTxbWriter"/>
	<result column="sup_txb_reg_date" 		property="supTxbRegDate"/>
</resultMap>

<!-- *********************** START ************************* -->
<!-- ************************교재지급************************* -->
<!-- *********************** START ************************* -->

<!-- 교재지급 등록 시 등록된 학생들을 조회하는 select쿼리 -->
<select id="selectStudent" resultType="hashMap">
	SELECT 
			mr_id			AS mrId
		,	mr_name			AS mrName
		,	level_num		AS levelNum
	FROM 
		wt_member_registration
	WHERE
		mr_id LIKE CONCAT('%','s','%');
</select>

<!-- 교재지급 등록 -->
<insert id="addTxbSupply" parameterType="SupplyTextbook">

INSERT INTO wt_supply_textbook
	(
		sup_txb_code
	,   txb_code
	,   sup_txb_quantity
	,   txb_receiver_id
	,   sup_txb_date
	,   sup_txb_writer
	,   sup_txb_reg_date
	,	sup_remark)VALUES(
		#{supTxbCode}
	,   #{txbCode}
	,  ${supTxbQuantity}
	,  #{txbReceiverId}
	,  CURRENT_TIME()
	,  #{supTxbWriter}
	,  CURRENT_TIME()
	, '');

</insert>

<!-- 페이징을 위한 지급내역카운팅 -->
<select id="countSuppTxb" resultType="int">
      SELECT
         COUNT(*)
      FROM
         wt_supply_textbook;
</select>

<!-- 교재 지급내역 검색 -->
<select id="getSuppTxbSearch" resultType="hashMap">
		SELECT 
			st.sup_txb_code			AS	'supTxbCode'
		,	st.txb_code				AS	'txbCode'		
		,	tbi.txb_name			AS	'txbName'
		,  st.sup_txb_quantity		AS	'supTxbQuantity'
		,  st.txb_receiver_id		AS	'txbReceiverId'
		,	mr.mr_name				AS 	'txbReceiverName'	
		,  st.sup_txb_date			AS	'supTxbDate'
		,  st.sup_txb_writer		AS	'supTxbWriter'
		,	mr2.mr_name				AS	'supTxbWriterName'		
		,  st.sup_txb_reg_date		AS	'supTxbRegDate'
	FROM 
		wt_supply_textbook	AS st
		INNER JOIN
		wt_textbook_basic_information AS tbi
		ON
		st.txb_code	
		= 
		tbi.txb_code
		INNER JOIN
		wt_member_registration	AS mr
		ON
		st.txb_receiver_id 
		=
		mr.mr_id
		LEFT join
		wt_member_registration	AS mr2
		ON
		st.sup_txb_writer
		=	
		mr2.mr_id	
	WHERE
		${suppTxbSk} LIKE (CONCAT ('%',#{suppTxbSv},'%'));
</select>

<!-- 교재지급내역조회 -->
<select id="getTextbookSupp" resultMap="resultSupplyTextbook">
	SELECT 
			sup_txb_code
		,  txb_code
		,  sup_txb_quantity
		,  txb_receiver_id
		,  sup_txb_date
		,  sup_txb_writer
		,  sup_txb_reg_date
	FROM wt_supply_textbook
</select>

<!-- 교재지급내역조회 페이징 -->
<select id="getTextbookSuppList" resultType="hashMap" >
	SELECT 
			st.sup_txb_code			AS	'supTxbCode'
		,	st.txb_code				AS	'txbCode'		
		,	tbi.txb_name			AS	'txbName'
		,  st.sup_txb_quantity		AS	'supTxbQuantity'
		,  st.txb_receiver_id		AS	'txbReceiverId'
		,	mr.mr_name				AS 	'txbReceiverName'	
		,  st.sup_txb_date			AS	'supTxbDate'
		,  st.sup_txb_writer		AS	'supTxbWriter'
		,	mr2.mr_name				AS	'supTxbWriterName'		
		,  st.sup_txb_reg_date		AS	'supTxbRegDate'
	FROM 
		wt_supply_textbook	AS st
		INNER JOIN
		wt_textbook_basic_information AS tbi
		ON
		st.txb_code	
		= 
		tbi.txb_code
		INNER JOIN
		wt_member_registration	AS mr
		ON
		st.txb_receiver_id 
		=
		mr.mr_id
		LEFT join
		wt_member_registration	AS mr2
		ON
		st.sup_txb_writer
		=	
		mr2.mr_id		
	ORDER BY sup_txb_code ASC
	LIMIT #{startRow},#{rowPerPage};
</select>

<!-- 교재지급코드 자동증가를 위해 max에 +1을 한값 select -->
<select id="getTxbSuppMaxCode" resultType="String">
	SELECT IFNULL(
		(SELECT 
			MAX(CAST(substring(sup_txb_code,8) AS DECIMAL))+1 
		FROM 
			wt_supply_textbook),1) AS max;
</select>


<!-- *********************** END ************************** -->
<!-- ************************교재지급************************ -->
<!-- *********************** END ************************** -->



<!-- *********************** START ************************* -->
<!-- ************************교재입고************************* -->
<!-- *********************** START ************************* -->

<!-- 입고내역 수정 -->
<update id="modifyTxbWaho">

UPDATE wt_warehousing_textbook
	SET
		txb_code=#{txbCode},
		wh_txb_quantity=#{whTxbQuantity},
		wh_txb_date=#{whTxbDateTime},
		stock_txb_quantity=#{stockTxbQuantity},
		wh_txb_remark=#{whTxbRemark},
		wh_txb_modifier=#{whTxbModifier},
		wh_txb_modify_date=NOW()
	WHERE wh_txb_code=#{whTxbCode};
</update>

<!-- 입고내역이 있는 교재정보만 가져오기 -->
<select id="selectExistTxbWaho" resultType="hashMap">
SELECT
	tbi.txb_code		AS	'txbCode'
	,tbi.txb_name		AS	'txbName'
	,tbi.txb_publisher	AS	'txbPublisher'
	,tbi.txb_author		AS	'txbAuthor'
	,tbi.txb_writer		AS	'txbWriter'
FROM
	wt_warehousing_textbook	AS wt
	LEFT JOIN 
	wt_textbook_basic_information	AS tbi
	ON
	wt.txb_code = tbi.txb_code 
	GROUP BY wt.txb_code ;

</select>

<!-- 가장최근날짜의 재고수량 조회 -->
<select id="getStockTxbQuantity" resultType="int" parameterType="String">
	SELECT 
		stock_txb_quantity
		
	FROM 
		wt_warehousing_textbook AS wt
	WHERE
		txb_code = #{txbCode}
	GROUP BY
		wt.wh_txb_date
	ORDER BY wt.wh_txb_date DESC LIMIT 1

</select>

<!-- 페이징을 위한 입고내역카운팅 -->
<select id="countWhTxb" resultType="int">
      SELECT
         COUNT(*)
      FROM
         wt_warehousing_textbook;

</select>

<!-- 마지막으로 입고된 내역 조회 -->
<select id="getRecentTxbWhList" resultType="WhTextbook" resultMap="resultWhTextbook">
	SELECT 
			wh_txb_code
		, 	txb_code
		, 	wh_txb_quantity
		, 	wh_txb_date
		, 	stock_txb_quantity
		, 	wh_txb_writer
		, 	wh_txb_reg_date
		, 	wh_txb_remark
	FROM
		wt_warehousing_textbook
	ORDER BY wh_txb_code DESC LIMIT 1
</select>

<!-- 교재코드로 입고정보 조회 -->
<select id="getOnlyTxbWaho" resultType="hashMap">
	SELECT
			wt.wh_txb_code			AS	whTxbCode	
		,	wt.txb_code				AS	txbCode
		,	wt.wh_txb_quantity		AS	whTxbQuantity
		,	wt.wh_txb_date			AS	whTxbDate
		,	wt.stock_txb_quantity	AS	stockTxbQuantity
		,	wt.wh_txb_writer		AS	whTxbWriter
		,	mr.mr_name				AS 	whTxbWriterName
		,	wt.wh_txb_reg_date		AS	whTxbRegDate
		,	wt.wh_txb_remark		AS	whTxbRemark
		,	tbi.txb_code			AS	txbCode
		,	tbi.txb_name			AS	txbName
		,	tbi.txb_publisher		AS	txbPublisher
		,	tbi.txb_author			AS	txbAuthor
		,	tbi.txb_writer			AS	txbWriter
		,	tbi.txb_reg_date		AS	txbRegDate
	FROM
		wt_textbook_basic_information AS tbi
		RIGHT JOIN
		wt_warehousing_textbook AS wt
		on
		wt.txb_code
		=
		tbi.txb_code
		INNER JOIN 
		wt_member_registration	AS mr
		ON 
		wt.wh_txb_writer = mr.mr_id
	WHERE	
	wt.wh_txb_code = #{whTxbCode};

</select>

<!-- 교재 입고내역 검색 -->
<select id="getWhTxbSearch"  resultType="hashMap" >
	
	SELECT
			wt.wh_txb_code			AS	whTxbCode	
		,	wt.txb_code				AS	txbCode
		,	wt.wh_txb_quantity		AS	whTxbQuantity
		,	wt.wh_txb_date			AS	whTxbDate
		,	wt.stock_txb_quantity	AS	stockTxbQuantity
		,	wt.wh_txb_writer		AS	whTxbWriter
		,	mr.mr_name				AS 	whTxbWriterName
		,	wt.wh_txb_reg_date		AS	whTxbRegDate
		,	wt.wh_txb_remark		AS	whTxbRemark
		,	tbi.txb_code			AS	txbCode
		,	tbi.txb_name			AS	txbName
		,	tbi.txb_publisher		AS	txbPublisher
		,	tbi.txb_author			AS	txbAuthor
		,	tbi.txb_writer			AS	txbWriter
		,	tbi.txb_reg_date		AS	txbRegDate
	FROM
		wt_textbook_basic_information AS tbi
		RIGHT JOIN
		wt_warehousing_textbook AS wt
		on
		wt.txb_code
		=
		tbi.txb_code
		INNER JOIN 
		wt_member_registration	AS mr
		ON 
		wt.wh_txb_writer = mr.mr_id
	WHERE	
	${whTxbSk} LIKE(CONCAT('%',#{whTxbSv},'%'));
</select>

<!-- 입고내역조회 -->
<select id="getWhTextbookList" resultMap="resultWhTextbook">
	SELECT
		 wh_txb_code
		 , txb_code
		 , wh_txb_quantity
		 , wh_txb_date
		 , stock_txb_quantity
		 , wh_txb_writer
		 , wh_txb_reg_date
		 , wh_txb_remark
	FROM wt_warehousing_textbook
</select>

<!-- 최초등록인지 체크 -->
<select id="wahoTextbookCheck" resultType="hashMap">
	SELECT
			wt.txb_code
		,	wt.stock_txb_quantity
		,	tbi.txb_code
		,	tbi.txb_name
	FROM
		wt_textbook_basic_information AS tbi
		LEFT JOIN
		wt_warehousing_textbook AS wt
		on
		tbi.txb_code
		=
		wt.txb_code
	WHERE
		wt.txb_code = #{txbCode};
</select>

<!-- 교재최초입고등록 -->
<insert id="addFirstWhTextbook" parameterType="WhTextbook">
	INSERT INTO wt_warehousing_textbook
		(wh_txb_code
		, txb_code
		, wh_txb_quantity
		, wh_txb_date
		, stock_txb_quantity
		, wh_txb_writer
		, wh_txb_reg_date
		, wh_txb_remark)VALUES (
			#{whTxbCode}
		,	#{txbCode}
		,	${whTxbQuantity}
		,	CURRENT_TIME()
		,	${whTxbQuantity}
		,	#{whTxbWriter}
		,	CURRENT_TIME()	
		,	#{whTxbRemark});	
</insert>

<!-- 교재입고등록 -->
<insert id="addWhTextbook" parameterType="WhTextbook">
	INSERT INTO wt_warehousing_textbook
		(wh_txb_code
		, txb_code
		, wh_txb_quantity
		, wh_txb_date
		, stock_txb_quantity
		, wh_txb_writer
		, wh_txb_reg_date
		, wh_txb_remark)VALUES (
			#{whTxbCode}
		, 	#{txbCode}
		, 	${whTxbQuantity}
		, 	CURRENT_TIME()
		, 	(SELECT 
				stock_txb_quantity
			FROM wt_warehousing_textbook AS wt
			WHERE
				txb_code = #{txbCode}
			GROUP BY
				wt.wh_txb_date
			ORDER BY wt.wh_txb_date DESC LIMIT 1)+${whTxbQuantity}
		, #{whTxbWriter}
		, CURRENT_TIME()	
		, #{whTxbRemark});	
</insert>

<!-- 교재입고코드 자동증가를 위해 max에 +1을 한값 select -->
<select id="getTxbWhMaxCode" resultType="String">
	SELECT IFNULL(
		(SELECT 
			MAX(CAST(SUBSTRING(wh_txb_code,12) AS DECIMAL))+1 
		FROM 
			wt_warehousing_textbook),1) AS max;
</select>


<!-- 입고리스트 조회 -->
<select id="getTextbookWahoList" resultType="hashMap" parameterType="Map">
	SELECT
			wt.wh_txb_code			AS	whTxbCode	
		,	wt.txb_code				AS	txbCode
		,	wt.wh_txb_quantity		AS	whTxbQuantity
		,	wt.wh_txb_date			AS	whTxbDate
		,	wt.stock_txb_quantity	AS	stockTxbQuantity
		,	wt.wh_txb_writer		AS	whTxbWriter
		,	mr.mr_name				AS 	whTxbWriterName
		,	wt.wh_txb_reg_date		AS	whTxbRegDate
		,	wt.wh_txb_remark		AS	whTxbRemark
		,	tbi.txb_code			AS	txbCode
		,	tbi.txb_name			AS	txbName
		,	tbi.txb_publisher		AS	txbPublisher
		,	tbi.txb_author			AS	txbAuthor
		,	tbi.txb_writer			AS	txbWriter
		,	tbi.txb_reg_date		AS	txbRegDate
	FROM
		wt_textbook_basic_information AS tbi
		RIGHT JOIN
		wt_warehousing_textbook AS wt
		on
		wt.txb_code
		=
		tbi.txb_code
		LEFT join
		wt_member_registration AS mr
		ON
		wt.wh_txb_writer 
		=
		mr.mr_id
	ORDER BY wt.wh_txb_code ASC
	LIMIT #{startRow},#{rowPerPage};

</select>


<!-- *********************** END ************************* -->
<!-- ************************교재입고************************ -->
<!-- *********************** END ************************ -->



<!-- *********************** START ************************* -->
<!-- ************************교재정보************************ -->
<!-- *********************** START ************************ -->

<!-- 교재정보 수정 -->
<update id="modifyTxbInfo">
UPDATE wt_textbook_basic_information
	SET
		txb_name= #{txbName},
		txb_publisher= #{txbPublisher},
		txb_author= #{txbAuthor},
		txb_remark= #{txbRemark},
		txb_mod_date= NOW(),
		txb_modifier=#{txbModifier}
	WHERE txb_code= #{txbCode}

</update>

<!-- 페이징을 위한 교재정보 카운팅 -->
<select id="countTxb" resultType="int">
      SELECT
         COUNT(*)
      FROM
      wt_textbook_basic_information;

</select>

<!-- 교재 정보 검색 -->
<select id="getTxbInfoSearch" resultMap="resultTxbBasicInfo">
	SELECT 
			txb_code
		,   txb_name
		,   txb_publisher
		,   txb_author
		,   txb_writer
		,   txb_reg_date
	FROM 
		wt_textbook_basic_information
	WHERE
		${infoTxbSk} LIKE(CONCAT('%',#{infoTxbSv},'%'))
</select>

<!-- 교재정보리스트 페이징-->
<select id="getTextbookInfoList" resultType="TextbookBasicInfo" resultMap="resultTxbBasicInfo">
	SELECT 
			txb_code
		,   txb_name
		,   txb_publisher
		,   txb_author
		,   txb_writer
		,   txb_reg_date
	FROM 
		wt_textbook_basic_information
	ORDER BY txb_code ASC
	LIMIT #{startRow},#{rowPerPage};
</select>

<!-- 교재정보리스트 -->
<select id="getTextbookInfo" resultType="TextbookBasicInfo" resultMap="resultTxbBasicInfo">
	SELECT 
			txb_code
		,   txb_name
		,   txb_publisher
		,   txb_author
		,   txb_writer
		,   txb_reg_date
	FROM 
		wt_textbook_basic_information

</select>

<!-- 교재코드로 교재정보 가져오기 -->
<select id="getOnlyTxbInfo" resultMap="resultTxbBasicInfo">
	SELECT 
			txb_code
		,   txb_name
		,   txb_publisher
		,   txb_author
		,   txb_writer
		,   txb_reg_date
		,	txb_remark
	FROM 
		wt_textbook_basic_information AS tbi
	WHERE
		tbi.txb_code = #{txbCode};
</select>

<!-- 교재정보코드 자동증가를 위해 max에 +1을 한값 select -->
<select id="getTxbInfoMaxCode" resultType="String">
	SELECT IFNULL(
		(SELECT 
			MAX(CAST(substring(txb_code,5) AS DECIMAL))+1 
		FROM 
			wt_textbook_basic_information),1) AS max;
</select>

<!-- 교재정보등록시 마지막으로 등록된 코드 가져오기 -->
<select id="getAddTxbInfoCode" resultType="String">
	SELECT 
		tbi.txb_code 
	FROM 
		wt_textbook_basic_information AS tbi
	ORDER BY 
		tbi.txb_code DESC LIMIT 1;
</select>

<!-- 교재기초정보등록 -->
<insert id="addTextbookInfo" parameterType="TextbookBasicInfo">
	INSERT INTO wt_textbook_basic_information
		( txb_code
		, txb_name
		, txb_publisher
		, txb_author
		, txb_writer
		, txb_reg_date)VALUES (
			#{txbCode}
		,   #{txbName}
		,   #{txbPublisher}
		,   #{txbAuthor}
		,   #{txbWriter}
		,   CURRENT_TIME())
</insert>



<!-- *********************** END ************************* -->
<!-- ************************교재정보*********************** -->
<!-- *********************** END ************************* -->


</mapper>
    
