<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafe24.wio.mapper.ConsultingMapper">
	<resultMap type="Consulting" id="ConsultingMap">
		<result column="cs_code" 		property="ConsultingCode"/>
		<result column="cs_date" 		property="ConsultingTitle"/>
		<result column="mr_o_id" 		property="ConsultingTeacher"/>
		<result column="cs_date" 		property="ConsultingDate"/>
		<result column="cs_lec_name" 	property="ConsultingClass"/>
		<result column="cs_s_name" 		property="ConsultingStudent"/>
		<result column="cs_data" 		property="ConsultingData"/>
	</resultMap>
	<delete id="deleteConsulting" parameterType="int">
		DELETE 
		FROM 
			wt_consulting 
		WHERE 
			cs_code=#{ConsultingCode};
	</delete>
	<!-- 상담내역 수정처리 쿼리문 -->
	<update id="upconsultingList" parameterType="Consulting">
		UPDATE 
			wt_consulting
		SET
			cs_title=#{ConsultingTitle},
			mr_o_id=#{ConsultingTeacher},
			cs_lec_name=#{ConsultingClass},
			cs_s_name=#{ConsultingStudent},
			cs_data=#{ConsultingData}
		WHERE 
			cs_code=#{ConsultingCode};
	</update>
	<!-- ajax를 통하여 데이터를 가져오는 쿼리문 -->
	<select id="consultingInformation" resultType="hashMap" parameterType="map">
		SELECT 
		cs.cs_code
		, cs.cs_title
		, cs.mr_o_id
		, cs.cs_date
		, cs.cs_lec_name
		, cs.cs_s_name
		, cs.cs_data
		, mr.mr_name
		FROM 
			wt_consulting AS cs
			INNER join
			wt_member_registration AS mr
			on
			cs.mr_o_id = mr.mr_id
		where
			cs.cs_code= #{ConsultingCode};
	</select>
	<!-- 상담내역 데이터를 가져와 리스트에페이징처리하는 쿼리문 -->
	<select id="consultingList" resultType="hashMap" parameterType="map">
		  SELECT 
		 	cs.rowNum   AS rowNum
		 	, cs_code		AS ConsultingCode
         	, cs_title		AS ConsultingTitle
			, mr_o_id		AS ConsultingTeacher
			, cs_date		AS ConsultingDate
			, cs_lec_name	AS ConsultingClass
			, cs_s_name		AS ConsultingStudent
			, cs_data		AS ConsultingData
			, mr_name
      FROM 
         (SELECT
            (@rowNum := @rowNum+1) AS rowNum
            , cs_code
           	, cs_title
			, mr_o_id
			, cs_date
			, cs_lec_name
			, cs_s_name
			, cs_data
			, m.mr_name
         FROM   
            wt_consulting AS c
            INNER join
            wt_member_registration AS m
            on
            c.mr_o_id = m.mr_id
            JOIN
            (SELECT @rowNum :=0 ) AS r   
        	ORDER BY c.cs_code ASC) AS cs
     		LIMIT #{startRow},#{rowPerPage};  
	</select>
	<!-- 페이징처리시 몇개의 데이터가 있는지 확인하는 쿼리문 -->
	<select id="consultingListCount" resultType="int">
      SELECT
         COUNT(*)
      FROM
         wt_consulting;
    </select>
    <!-- 상담작성페이지에서 선생님부터 관리자까지 누가있는지 확인하는 쿼리문 -->
	<select id="SelectTeacher" resultType="hashMap" parameterType="String">
		SELECT 
			mr_id
			,mr_name
		FROM 
			wt_member_registration
		WHERE
	 		level_num = 1 OR level_num = 2 OR level_num = 3;
	</select>
	<!-- 상담작성페이지에서 개설한강의반의 이름을 확인하는 쿼리문 -->
	<select id="SelectLecName" resultType="hashMap" parameterType="String">
		SELECT 
			lec_name
		FROM 
			wt_lecture_open_schedule;
	</select>
	<!-- 상담작성페이지에서 상담내용을 database에 insert하는 쿼리문 -->
	<insert id="addConsultingWrite">
		INSERT INTO 
			wt_consulting
			(cs_code
			, cs_title
			, mr_o_id
			, cs_date
			, cs_lec_name
			, cs_s_name
			, cs_data)
		VALUES 
			(NULL
			, #{ConsultingTitle}
			, #{ConsultingTeacher}
			, NOW(), #{ConsultingClass}
			, #{ConsultingStudent}
			, #{ConsultingData});
	</insert>
</mapper>